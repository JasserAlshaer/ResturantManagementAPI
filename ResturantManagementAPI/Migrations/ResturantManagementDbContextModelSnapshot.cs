// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ResturantManagementAPI.Models.Context;

#nullable disable

namespace ResturantManagementAPI.Migrations
{
    [DbContext(typeof(ResturantManagementDbContext))]
    partial class ResturantManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ResturantManagementAPI.Models.Entites.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 2, 20, 21, 30, 26, 932, DateTimeKind.Local).AddTicks(9203));

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId")
                        .IsUnique();

                    b.HasIndex("Status")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Carts", null, t =>
                        {
                            t.HasCheckConstraint("CH_CartAddingDate", "CreatedDate >= sysdatetime()");
                        });
                });

            modelBuilder.Entity("ResturantManagementAPI.Models.Entites.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<int?>("MealId")
                        .HasColumnType("int");

                    b.Property<int>("Qtn")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.HasIndex("ItemId");

                    b.HasIndex("MealId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("ResturantManagementAPI.Models.Entites.Ingredidiante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IngredientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PricePerUnit")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Ingredidiantes");
                });

            modelBuilder.Entity("ResturantManagementAPI.Models.Entites.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("ResturantManagementAPI.Models.Entites.ItemIngredidiante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IngredidianteId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<float>("Qtn")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("IngredidianteId");

                    b.HasIndex("ItemId");

                    b.ToTable("ItemIngredidiantes");
                });

            modelBuilder.Entity("ResturantManagementAPI.Models.Entites.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartItemMeal")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ItemMealId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("ResturantManagementAPI.Models.Entites.MealItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("MealId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("MealId");

                    b.ToTable("MealItems");
                });

            modelBuilder.Entity("ResturantManagementAPI.Models.Entites.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ResturantManagementAPI.Models.Entites.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ResturantManagementAPI.Models.Entites.Cart", b =>
                {
                    b.HasOne("ResturantManagementAPI.Models.Entites.Order", "Order")
                        .WithOne("Cart")
                        .HasForeignKey("ResturantManagementAPI.Models.Entites.Cart", "CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResturantManagementAPI.Models.Entites.User", "User")
                        .WithMany("Carts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ResturantManagementAPI.Models.Entites.CartItem", b =>
                {
                    b.HasOne("ResturantManagementAPI.Models.Entites.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResturantManagementAPI.Models.Entites.Item", "Item")
                        .WithMany("CartItems")
                        .HasForeignKey("ItemId");

                    b.HasOne("ResturantManagementAPI.Models.Entites.Meal", "Meal")
                        .WithMany("CartItems")
                        .HasForeignKey("MealId");

                    b.Navigation("Cart");

                    b.Navigation("Item");

                    b.Navigation("Meal");
                });

            modelBuilder.Entity("ResturantManagementAPI.Models.Entites.ItemIngredidiante", b =>
                {
                    b.HasOne("ResturantManagementAPI.Models.Entites.Ingredidiante", "Ingredidiante")
                        .WithMany("ItemIngredidiantes")
                        .HasForeignKey("IngredidianteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResturantManagementAPI.Models.Entites.Item", "Item")
                        .WithMany("ItemIngredidiantes")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredidiante");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("ResturantManagementAPI.Models.Entites.MealItem", b =>
                {
                    b.HasOne("ResturantManagementAPI.Models.Entites.Item", "Item")
                        .WithMany("MealItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ResturantManagementAPI.Models.Entites.Meal", "Meal")
                        .WithMany("MealItems")
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Meal");
                });

            modelBuilder.Entity("ResturantManagementAPI.Models.Entites.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("ResturantManagementAPI.Models.Entites.Ingredidiante", b =>
                {
                    b.Navigation("ItemIngredidiantes");
                });

            modelBuilder.Entity("ResturantManagementAPI.Models.Entites.Item", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("ItemIngredidiantes");

                    b.Navigation("MealItems");
                });

            modelBuilder.Entity("ResturantManagementAPI.Models.Entites.Meal", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("MealItems");
                });

            modelBuilder.Entity("ResturantManagementAPI.Models.Entites.Order", b =>
                {
                    b.Navigation("Cart")
                        .IsRequired();
                });

            modelBuilder.Entity("ResturantManagementAPI.Models.Entites.User", b =>
                {
                    b.Navigation("Carts");
                });
#pragma warning restore 612, 618
        }
    }
}
